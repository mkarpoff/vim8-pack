#! /usr/bin/env bash
my_dir="$(dirname "$(readlink "$0")")"
source "$my_dir/bash_ini_parser/read_ini.sh"
repo_dir=$HOME/.vim/pack/git-plugins
silent=false


####
# This handles the optional arguments
###

SHORT=hsd:
LONG=help,silent,git-dir:

getopt --test > /dev/null
supports_long_opts=$(( $? == 4 ))
if [[ $supports_long_opts == true ]]; then
	PARSED=$(getopt --options $SHORT --longoptions $LONG --name "$0" -- "$@")
else
	PARSED=$(getopt --options $SHORT --name "$0" -- "$@")
fi

if (( $? != 0 )); then
	echo 'Failed to parse arguments'
	exit 2
fi

eval set -- "$PARSED"
while true; do
	case "$1" in
		-h|--help)
			usage=true
			break
			;;
		-d|--git-dir)
			repo_dir=$2
			shift 2
			;;
		-s|--silent)
			silent=true
			shift
			;;
		--)
			shift
			break
			;;
		*)
			break
			;;
	esac
done

if [[ $usage == true ]]; then
	echo 'vim-pack import [-s|--silent] [-d <dir>| --git-dir=<dir>] <file>'
	echo
	echo '<file> is the name of the required INI format file. This can be generated using vim-pack export this is useful for'
	echo 'transferring configurations between machines.'
	echo 
	echo 'options:'
	echo '    -s| --silent'
	echo '        to hide output that normally goes to stdout'
	echo
	echo '    -d <dir> | --git-dir=<dir>'
	echo '        specify the name for the package directory by default it is'
	echo '        $HOME/.vim/pack/git-plugins'
	echo
	echo 'note:'
	echo '       long options are only available with systems that have an enhanced version'
	echo '       of getopt.'
	if [[ $supports_long_opts == true ]]; then
		echo '       this system does support long options'
	else
		echo '       this system does not support long options'
	fi
	exit 0
fi

import_file=$1
read_ini "$import_file"

for sec in ${INI__ALL_SECTIONS}; do
	v="INI__${sec}__url"
	repo_target=${!v}
	v="INI__${sec}__dir"
	dest_name=${!v}
	if [ "$silent" == true ]; then
		git clone "$repo_target" "$repo_dir/$dest_name" > /dev/null
	else
		git clone "$repo_target" "$repo_dir/$dest_name"
	fi
done

exit $?
