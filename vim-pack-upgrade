#! /usr/bin/env bash
repo_dir=$HOME/.vim/pack/git-plugins
silent=false

####
# This handles the optional arguments
###
SHORT=hsd:
LONG=hsilent,git-dir:
getopt --test > /dev/null
supports_long_opts=$(( $? == 4 ))
if [[ $supports_long_opts == true ]]; then
	if PARSED=$(getopt --options $SHORT --longoptions $LONG --name "$0" -- "$@"); then
		echo 'Failed to parse arguments'
		exit 2
	fi
else
	if PARSED=$(getopt --options $SHORT --name "$0" -- "$@"); then
		echo 'Failed to parse arguments'
		exit 2
	fi
fi

eval set -- "$PARSED"
while true; do
	case "$1" in
		-h|--help)
			usage=true
			break
			;;
		-d|--git-dir)
			repo_dir=$2
			shift 2
			;;
		-s|--silent)
			silent=true
			shift
			;;
		--)
			shift
			break
			;;
		*)
			echo "Unknown argument: " "$1"
			exit 3
			;;
	esac
done
if [[ $usage == true ]]; then
	echo 'usage: vim-pack upgrade [-s|--silent] [-d <dir>| --git-dir=<dir>]'
	echo
	echo 'options:'
	echo '    -s| --silent'
	echo '        to hide output that normally goes to stdout'
	echo
	echo '    -d <dir> | --git-dir=<dir>'
	echo '        specify the name for the package directory by default it is'
	echo '        $home/.vim/pack/git-plugins'
	echo
	echo 'note:'
	echo '       long options are only available with systems that have an enhanced version'
	echo '       of getopt.'
	if [[ $supports_long_opts == true ]]; then
		echo '       this system does support long options'
	else
		echo '       this system does not support long options'
	fi
	exit 0
fi

if [[ "$silent" == true ]]; then
	for i in {opt,start}; do
		for j in $repo_dir/$i/*/; do
			git -C "$j" pull > /dev/null
		done
	done
else
	for i in {opt,start}; do
		for j in $repo_dir/$i/*; do
			echo "$j"
			git -C "$j" pull
		done
	done
fi

exit 0
