#! /usr/bin/env bash
repo_dir="$HOME/.vim/pack/git-plugins"
silent=false


####
# This handles the optional arguments
###

SHORT=hsd:
LONG=help,silent,git-dir:
getopt --test > /dev/null
supports_long_opts=$(( $? == 4 ))
if [[ $supports_long_opts == true ]]; then
	if PARSED=$(getopt --options $SHORT --longoptions $LONG --name "$0" -- "$@"); then 
		echo 'Failed to parse arguments'
		exit 2
	fi
else
	if PARSED=$(getopt --options $SHORT --name "$0" -- "$@"); then
		echo 'Failed to parse arguments'
		exit 2
	fi
fi

eval set -- "$PARSED"
while true; do
	case "$1" in 
		-h|--help)
			usage=true
			break
			;;
		-d|--git-dir)
			repo_dir=$2
			shift 2
			;;
		-s|--silent)
			silent=true
			shift
			;;
		--)
			shift
			break
			;;
		*)
			shift
			;;
	esac
done
if [[ $usage == true ]]; then
	echo 'usage: vim-pack remove [-s|--silent] [-d <dir>| --git-dir=<dir>] [<opt|start>] <name>'
	echo
	echo '<name> specifies the package name'
	echo
	echo 'options:'
	echo '    -s| --silent'
	echo '        to hide output that normally goes to stdout'
	echo
	echo '    -d <dir> | --git-dir=<dir>'
	echo '        specify the name for the package directory by default it is'
	echo '        $HOME/.vim/pack/git-plugins'
	echo
	echo 'note:'
	echo '       long options are only available with systems that have an enhanced version'
	echo '       of getopt.'
	if [[ $supports_long_opts == true ]]; then
		echo '       this system does support long options'
	else
		echo '       this system does not support long options'
	fi
	exit 0
fi

if (( $# == 2 )); then
	start_opt=$1
	pack_name=$2
	if [[ "$silent" == true ]]; then 
		rm -rf "${repo_dir:?}/$start_opt/$pack_name" > /dev/null
	else
		rm -rf "${repo_dir:?}/$start_opt/$pack_name"
	fi
elif (( $# == 1 )); then
	pack_name=$1
	if [[ "$silent" == true ]]; then 
		rm -rf "$repo_dir/start/$pack_name" > /dev/null
		rm -rf "$repo_dir/opt/$pack_name" > /dev/null
	else
		rm -rf "$repo_dir/start/$pack_name"
		rm -rf "$repo_dir/opt/$pack_name"
	fi
fi


exit $?
