#! /usr/bin/env bash
repo_dir=$HOME/.vim/pack/git-plugins
silent=false

####
# This handles the optional arguments
###
SHORT=sd:
LONG=silent,git-dir:
getopt --test > /dev/null
if (( $? == 4 )); then
	PARSED=$(getopt --options $SHORT --longoptions $LONG --name "$0" -- "$@")
else
	PARSED=$(getopt --options $SHORT --name "$0" -- "$@")
fi

if (( $? != 0 )); then
	echo 'Failed to parse arguments'
	exit 2
fi

eval set -- "$PARSED"
while true; do
	case "$1" in
		-d|--git-dir)
			repo_dir=$2
			shift 2
			;;
		-s|--silent)
			silent=true
			shift
			;;
		--)
			shift
			break
			;;
		*)
			echo "Unknown argument: " "$1"
			exit 3
			;;
	esac
done

update_count=$(( 0 ))
update_list=""
if [[ "$silent" == true ]]; then
	for i in {opt,start}; do
		for j in $repo_dir/$i/*/; do
			git -C "$j" fetch > /dev/null
			_ahead=$(git -C "$j" rev-list "HEAD..@{u}" | wc -l)
			if (( _ahead > 0 )); then
				update_count=$(( update_count + 1 ))
				update_list="$update_list ${j#"$repo_dir/$i/"}"
			fi
		done
	done
else
	for i in {opt,start}; do
		for j in $repo_dir/$i/*; do
			echo "$j"
			git -C "$j" fetch
			_ahead=$(git -C "$j" rev-list 'HEAD..@{u}' | wc -l)
			if (( _ahead > 0 )); then
				update_count=$(( update_count + 1 ))
				update_list="$update_list ${j#"$repo_dir/$i/"}"
			fi
		done
	done
fi
if (( update_count > 0 )); then
	echo 'Updates available for:'
	echo "  $update_list"
else
	echo 'No updates available'
fi
exit 0
